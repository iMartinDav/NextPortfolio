/* ========================================= */
/* Tailwind CSS v4 Configuration            */
/* This file will replace tailwind.config.ts in v4 */
/* ========================================= */

@import 'tailwindcss';

@custom-variant dark (&:is(.dark *));

@theme {
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-gradient-start: #7f00ff;
  --color-gradient-end: #e100ff;
  --color-background-dark: #0b0a21;
  --color-foreground-dark: #1a1941;
  --color-blue-light: #00bfae;
  --color-blue-dark: #008f8c;
  --color-purple-light: #7f00ff;
  --color-purple-dark: #4b0082;

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-custom-lg: 1.5rem;

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;
  --animate-spin-around: spin-around calc(var(--speed) * 2) infinite linear;
  --animate-slide: slide var(--speed) ease-in-out infinite alternate;
  --animate-marquee: marquee var(--duration) linear infinite;
  --animate-marquee-vertical: marquee-vertical var(--duration) linear infinite;
  --animate-meteor: meteor 5s linear infinite;
  --animate-orbit: orbit calc(var(--duration) * 1s) linear infinite;
  --animate-grid: grid 15s linear infinite;
  --animate-ripple: ripple 3400ms ease infinite;
  --animate-glow-move: move 5s linear infinite;
  --animate-particles: k calc(var(--m) * 1s) linear
    calc(var(--m) * var(--t, 0) * 1s) infinite;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
  @keyframes spin-around {
    0% {
      transform: translateZ(0) rotate(0);
    }
    15%,
    35% {
      transform: translateZ(0) rotate(90deg);
    }
    65%,
    85% {
      transform: translateZ(0) rotate(270deg);
    }
    100% {
      transform: translateZ(0) rotate(360deg);
    }
  }
  @keyframes slide {
    to {
      transform: translate(calc(100cqw - 100%), 0);
    }
  }
  @keyframes marquee {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(calc(-100% - var(--gap)));
    }
  }
  @keyframes marquee-vertical {
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(calc(-100% - var(--gap)));
    }
  }
  @keyframes meteor {
    0% {
      transform: rotate(215deg) translateX(0);
      opacity: 1;
    }
    70% {
      opacity: 1;
    }
    100% {
      transform: rotate(215deg) translateX(-500px);
      opacity: 0;
    }
  }
  @keyframes orbit {
    0% {
      transform: rotate(0deg) translateY(calc(var(--radius) * 1px)) rotate(0deg);
    }
    100% {
      transform: rotate(360deg) translateY(calc(var(--radius) * 1px))
        rotate(-360deg);
    }
  }
  @keyframes grid {
    0% {
      transform: translateY(-50%);
    }
    100% {
      transform: translateY(0);
    }
  }
  @keyframes ripple {
    0%,
    100% {
      transform: translate(-50%, -50%) scale(1);
    }
    50% {
      transform: translate(-50%, -50%) scale(0.9);
    }
  }
  @keyframes move {
    0% {
      offset-distance: 0%;
    }
    100% {
      offset-distance: 100%;
    }
  }
  @keyframes k {
    0%,
    33.3% {
      --k: 1;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

@theme {
  /* Container settings */
  --default-container-center: true;
  --default-container-padding: 2rem;

  /* Breakpoints */
  --breakpoint-2xl: 87.5rem; /* 1400px */

  /* Custom Colors */
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  /* Primary Colors */
  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  /* Secondary Colors */
  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  /* Destructive Colors */
  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  /* Muted Colors */
  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  /* Accent Colors */
  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  /* Popover Colors */
  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  /* Card Colors */
  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  /* Custom Gradient Colors */
  --color-gradient-start: #7f00ff;
  --color-gradient-end: #e100ff;
  --color-background-dark: #0b0a21;
  --color-foreground-dark: #1a1941;
  --color-blue-light: #00bfae;
  --color-blue-dark: #008f8c;
  --color-purple-light: #7f00ff;
  --color-purple-dark: #4b0082;

  /* Border Radius */
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-custom-lg: 1.5rem;
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

/* Custom utility classes for v4 */
@utility offset-path-rect {
  offset-path: rect(0% auto 100% auto);
}
@utility glow-bg {
  background: radial-gradient(#fff, #f1f5f9, transparent);
}
@utility animation-duration-fast {
  /* Animation helper classes */
  animation-duration: 0.2s;
}
@utility animation-duration-normal {
  animation-duration: 0.5s;
}
@utility animation-duration-slow {
  animation-duration: 1s;
}

/* ========================================= */
/* MIGRATION NOTES:                          */
/* ========================================= */
/*
1. This file will replace tailwind.config.ts in v4
2. All animations have been moved to animations.css
3. Colors are now defined using CSS custom properties
4. Container settings are configured with CSS variables
5. Dark mode is handled via media queries or class-based
6. Custom utilities are defined in @layer utilities
*/

/* Dark mode configuration */
@media (prefers-color-scheme: dark) {
  @theme {
    /* Dark mode color overrides if needed */
  }
}
